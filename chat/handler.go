package chat

import (
	"average-watcher-bot/data"
	"strings"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func ListenUpdates() {
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates := bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message == nil {
			continue
		}

		text := update.Message.Text

		if strings.HasPrefix(text, "/add ") {
			ip := strings.TrimSpace(strings.TrimPrefix(text, "/add "))
			ok, err := data.AddToWatchList(ip)
			if ok == false && err == nil {
				send(update.Message.Chat.ID, "‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π IP!")
			}
			if err != nil {
				send(update.Message.Chat.ID, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏")
			} else if ok == false {
				send(update.Message.Chat.ID, "‚ö†Ô∏è IP —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è")
			} else {
				send(update.Message.Chat.ID, "‚úîÔ∏è IP —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω: "+ip)
			}
		}

		if text == "/list" {
			list := data.LoadWatchList()
			msg := "üéØ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ IP:\n"
			for _, ip := range list {
				msg += "‚Ä¢ " + ip + "\n"
			}
			send(update.Message.Chat.ID, msg)
		}

		if strings.HasPrefix(text, "/remove ") {
			ip := strings.TrimSpace(strings.TrimPrefix(text, "/remove "))
			ok, err := data.RemoveFromWatchList(ip)
			if err != nil {
				send(update.Message.Chat.ID, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏")
			} else if !ok {
				send(update.Message.Chat.ID, "‚ö†Ô∏è –¢–∞–∫–æ–≥–æ IP –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ")
			} else {
				send(update.Message.Chat.ID, "üóëÔ∏è IP —É–¥–∞–ª—ë–Ω: "+ip)
			}
		}

		if strings.HasPrefix(text, "/status") {
			statusMap := data.LoadStatusMap()
			msg := "üñ• –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–æ–≤ —Å–µ–π—á–∞—Å: \n"
			for ip, status := range statusMap {
				var statusText string
				if status {
					statusText = "üü¢ –û–Ω–ª–∞–π–Ω"
				} else {
					statusText = "üî¥ –û—Ñ—Ñ–ª–∞–π–Ω"
				}
				msg += "‚Ä¢ " + ip + ": " + statusText + "\n"
			}
			send(update.Message.Chat.ID, msg)
		}

	}
}

func send(chatID int64, text string) {
	msg := tgbotapi.NewMessage(chatID, text)
	bot.Send(msg)
}
